<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"   
    xmlns:aop="http://www.springframework.org/schema/aop"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd ">



	<context:component-scan base-package="com.mkstore.*" />
	<context:component-scan base-package="com.mkstore.*.*" />
	
	
	<!-- 数据库placeholder -->
	<context:property-placeholder location="classpath*:*.properties" />
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- quartz 数据库读取数据库信息  -->
	<beans:bean id="quartzDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">  
	    <beans:property name="driverClass" value="${db.drivers}" />  
	    <beans:property name="url" value="${db.url}" />  
	    <beans:property name="username" value="${db.user}" />  
	    <beans:property name="password" value="${db.password}" />  
	</beans:bean>
	
	<!-- 引入其他的spring配置文件  --> 
    <beans:import resource="classpath:quartz-cluster.xml"/>
    
	<!-- 配置数据源 -->
	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName">
			<beans:value>${db.drivers}</beans:value>
		</beans:property>
		<beans:property name="url">
			<beans:value>${db.url}</beans:value>
		</beans:property>
		<beans:property name="username">
			<beans:value>${db.user}</beans:value>
		</beans:property>
		<beans:property name="password">
			<beans:value>${db.password}</beans:value>
		</beans:property>
	</beans:bean>


	<!-- 配置sqlSessionFactory -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:mybatis-config.xml" />
		<beans:property name="mapperLocations"
			value="classpath:com/mkstore/**/mapper/*.xml" />
	</beans:bean>

	<!-- mybatis接口文件 -->
	<beans:bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<beans:property name="basePackage" value="com.mkstore.mk.dao" />
		<beans:property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</beans:bean>

	<!-- 配置事务 -->
	<beans:bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<tx:annotation-driven transaction-manager="transactionManager" />

   	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="defaultEncoding" value="UTF-8"/>
		 <!-- 暂时先指定所上传文件的总大小不能超过6GB。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->  
		<beans:property name="maxUploadSize" value="6144000000"/>
	</beans:bean>

    <!--  
	<beans:bean id="exceptionHandler" class="com.hnykx.bs.extender.GlobalExceptionHandler"/>
	-->
</beans:beans>