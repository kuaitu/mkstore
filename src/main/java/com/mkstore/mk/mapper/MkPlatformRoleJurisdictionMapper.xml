<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mkstore.mk.dao.MkPlatformRoleJurisdictionMapper" >
  <resultMap id="BaseResultMap" type="com.mkstore.mk.model.MkPlatformRoleJurisdiction" >
    <id column="platform_role_jurisdiction_id" property="platformRoleJurisdictionId" jdbcType="INTEGER" />
    <result column="platform_role_id" property="platformRoleId" jdbcType="INTEGER" />
    <result column="platform_jurisdiction_id" property="platformJurisdictionId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.rightValue" >
                  and ${criterion.beforeValue}#{criterion.value}${criterion.afterValue} ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} ${criterion.beforeValue}#{criterion.value}${criterion.afterValue}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.rightValue" >
                  and ${criterion.beforeValue}#{criterion.value}${criterion.afterValue} ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} ${criterion.beforeValue}#{criterion.value}${criterion.afterValue}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    mk_platform_role_jurisdiction.platform_role_jurisdiction_id, mk_platform_role_jurisdiction.platform_role_id, mk_platform_role_jurisdiction.platform_jurisdiction_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mkstore.mk.model.MkPlatformRoleJurisdictionExample" >
    <!--
    sql dialect: MySql
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mk_platform_role_jurisdiction
    <if test="from != null" >
      <foreach collection="from" item="join" separator=" " >
        ${join}
      </foreach>
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limit != null" >
      LIMIT
      <if test="offset != null" >
        ${offset},
      </if>
      ${limit}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from mk_platform_role_jurisdiction
    where platform_role_jurisdiction_id = #{platformRoleJurisdictionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from mk_platform_role_jurisdiction
    where platform_role_jurisdiction_id = #{platformRoleJurisdictionId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mkstore.mk.model.MkPlatformRoleJurisdictionExample" >
    delete from mk_platform_role_jurisdiction
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mkstore.mk.model.MkPlatformRoleJurisdiction" >
    <selectKey resultType="java.lang.Integer" keyProperty="platformRoleJurisdictionId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mk_platform_role_jurisdiction (platform_role_id, platform_jurisdiction_id
      )
    values (#{platformRoleId,jdbcType=INTEGER}, #{platformJurisdictionId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mkstore.mk.model.MkPlatformRoleJurisdiction" >
    <selectKey resultType="java.lang.Integer" keyProperty="platformRoleJurisdictionId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mk_platform_role_jurisdiction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="platformRoleId != null" >
        platform_role_id,
      </if>
      <if test="platformJurisdictionId != null" >
        platform_jurisdiction_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="platformRoleId != null" >
        #{platformRoleId,jdbcType=INTEGER},
      </if>
      <if test="platformJurisdictionId != null" >
        #{platformJurisdictionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mkstore.mk.model.MkPlatformRoleJurisdictionExample" resultType="java.lang.Integer" >
    select count(*) from mk_platform_role_jurisdiction
    <if test="from != null" >
      <foreach collection="from" item="join" separator=" " >
        ${join}
      </foreach>
    </if>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update mk_platform_role_jurisdiction
    <set >
      <if test="record.platformRoleJurisdictionId != null" >
        platform_role_jurisdiction_id = #{record.platformRoleJurisdictionId,jdbcType=INTEGER},
      </if>
      <if test="record.platformRoleId != null" >
        platform_role_id = #{record.platformRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.platformJurisdictionId != null" >
        platform_jurisdiction_id = #{record.platformJurisdictionId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update mk_platform_role_jurisdiction
    set platform_role_jurisdiction_id = #{record.platformRoleJurisdictionId,jdbcType=INTEGER},
      platform_role_id = #{record.platformRoleId,jdbcType=INTEGER},
      platform_jurisdiction_id = #{record.platformJurisdictionId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mkstore.mk.model.MkPlatformRoleJurisdiction" >
    update mk_platform_role_jurisdiction
    <set >
      <if test="platformRoleId != null" >
        platform_role_id = #{platformRoleId,jdbcType=INTEGER},
      </if>
      <if test="platformJurisdictionId != null" >
        platform_jurisdiction_id = #{platformJurisdictionId,jdbcType=INTEGER},
      </if>
    </set>
    where platform_role_jurisdiction_id = #{platformRoleJurisdictionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mkstore.mk.model.MkPlatformRoleJurisdiction" >
    update mk_platform_role_jurisdiction
    set platform_role_id = #{platformRoleId,jdbcType=INTEGER},
      platform_jurisdiction_id = #{platformJurisdictionId,jdbcType=INTEGER}
    where platform_role_jurisdiction_id = #{platformRoleJurisdictionId,jdbcType=INTEGER}
  </update>
</mapper>